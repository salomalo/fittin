/**
 *
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_PushNotificationEngine
{
	private $actions = null;
	private $params = array();
	
	public function productPurchase($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$PRODUCT_PURCHASE);
		$this->params = $params;
		$this->logActivity(MM_Event::$PRODUCT_PURCHASE, $params);
		$this->performActions();
	}
	
	
	public function memberAdded($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$MEMBER_ADD);
		$this->params = $params;
		$this->logActivity(MM_Event::$MEMBER_ADD, $params);
		$this->performActions();
	}
	
	public function memberStatusChanged($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$MEMBER_STATUS_CHANGE);
		$this->params = $params;
		$this->logActivity(MM_Event::$MEMBER_STATUS_CHANGE, $params);
		$this->performActions();
	}
	
	public function memberMembershipChanged($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$MEMBER_MEMBERSHIP_CHANGE);
		$this->params = $params;
		$this->logActivity(MM_Event::$MEMBER_MEMBERSHIP_CHANGE, $params);
		$this->performActions();
	}
	
	public function memberAccountUpdated($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$MEMBER_ACCOUNT_UPDATE);
		$this->params = $params;
		$this->performActions();
	}
	
	public function memberDeleted($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$MEMBER_DELETE);
		$this->params = $params;
		$this->performActions();
	}
	
	public function bundleAdded($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$BUNDLE_ADD);
		$this->params = $params;
		$this->logActivity(MM_Event::$BUNDLE_ADD, $params);
		$this->performActions();
	}
	
	public function bundleStatusChanged($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$BUNDLE_STATUS_CHANGE);
		$this->params = $params;
		$this->logActivity(MM_Event::$BUNDLE_STATUS_CHANGE, $params);
		$this->performActions();
	}
	
	public function paymentReceived($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$PAYMENT_RECEIVED);
		$this->params = $params;
		$this->logActivity(MM_Event::$PAYMENT_RECEIVED, $params);
		$this->performActions();
	}
	
	public function rebillPaymentReceived($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$PAYMENT_REBILL);
		$this->params = $params;
		$this->logActivity(MM_Event::$PAYMENT_REBILL, $params);
		$this->performActions();
	}
	
	public function rebillPaymentDeclined($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$PAYMENT_REBILL_DECLINED);
		$this->params = $params;
		$this->logActivity(MM_Event::$PAYMENT_REBILL_DECLINED, $params);
		$this->performActions();
	}
	
	public function billingSubscriptionUpdated($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$BILLING_SUBSCRIPTION_UPDATED);
		$this->params = $params;
		$this->logActivity(MM_Event::$BILLING_SUBSCRIPTION_UPDATED, $params);
		$this->performActions();
	}
	
	public function billingSubscriptionRebillDateChanged($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$BILLING_SUBSCRIPTION_REBILL_DATE_CHANGED);
		$this->params = $params;
		$this->logActivity(MM_Event::$BILLING_SUBSCRIPTION_REBILL_DATE_CHANGED, $params);
		$this->performActions();
	}
	
	public function billingSubscriptionCanceled($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$BILLING_SUBSCRIPTION_CANCELED);
		$this->params = $params;
		$this->logActivity(MM_Event::$BILLING_SUBSCRIPTION_CANCELED, $params);
		$this->performActions();
	}
	
	public function refundIssued($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$REFUND_ISSUED);
		$this->params = $params;
		$this->logActivity(MM_Event::$REFUND_ISSUED, $params);
		$this->performActions();
	}
	
	public function affiliateInfoChanged($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$AFFILIATE_INFO_CHANGED);
		$this->params = $params;
		$this->logActivity(MM_Event::$AFFILIATE_INFO_CHANGED, $params);
		$this->performActions();
	}
	
	public function initialCommission($params)
	{	
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$COMMISSION_INITIAL);
		$this->params = $params;
		$this->performActions();
	}
	
	public function rebillCommission($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$COMMISSION_REBILL);
		$this->params = $params;
		$this->performActions();
	}
	
	public function cancelCommission($params)
	{
		$this->actions = MM_Action::findActionsByEventType(MM_Event::$CANCEL_COMMISSION);
		$this->params = $params;
		$this->performActions();
	}
	
	private function logActivity($eventType, $params)
	{
		if(isset($params["member_id"]))
		{
			$logParams = array();
			
			$user = new MM_User($params["member_id"]);
			
			if($user->isValid())
			{
				switch($eventType)
				{
					case MM_Event::$MEMBER_ADD:
						$logParams[MM_ActivityLog::$PARAM_ACCESS_EVENT] = $eventType;
						$logParams[MM_ActivityLog::$PARAM_ACCESS_ID] = $params["membership_level"];
						$logParams[MM_ActivityLog::$PARAM_ACCESS_IS_COMPLIMENTARY] = $params["is_complimentary"];
						MM_ActivityLog::log($user, MM_ActivityLog::$EVENT_TYPE_ACCESS_RIGHTS, $logParams);
						break;
						
					case MM_Event::$MEMBER_STATUS_CHANGE:
						$logParams[MM_ActivityLog::$PARAM_ACCESS_EVENT] = $eventType;
						$logParams[MM_ActivityLog::$PARAM_ACCESS_ID] = $params["membership_level"];
						$logParams[MM_ActivityLog::$PARAM_ACCESS_IS_COMPLIMENTARY] = $params["is_complimentary"];
						$logParams[MM_ActivityLog::$PARAM_ACCESS_STATUS] = $params["status"];
						
						if($params["status"] == MM_Status::$ERROR)
						{
							$logParams[MM_ActivityLog::$PARAM_ACCESS_STATUS_MESSAGE] = $user->getStatusMessage();
						}
						
						MM_ActivityLog::log($user, MM_ActivityLog::$EVENT_TYPE_ACCESS_RIGHTS, $logParams);
						break;
						
					case MM_Event::$MEMBER_MEMBERSHIP_CHANGE:
						$logParams[MM_ActivityLog::$PARAM_ACCESS_EVENT] = $eventType;
						$logParams[MM_ActivityLog::$PARAM_ACCESS_ID] = $params["membership_level"];
						$logParams[MM_ActivityLog::$PARAM_ACCESS_IS_COMPLIMENTARY] = $params["is_complimentary"];
						MM_ActivityLog::log($user, MM_ActivityLog::$EVENT_TYPE_ACCESS_RIGHTS, $logParams);
						break;
						
					case MM_Event::$BUNDLE_ADD:
						$logParams[MM_ActivityLog::$PARAM_ACCESS_EVENT] = $eventType;
						$logParams[MM_ActivityLog::$PARAM_ACCESS_ID] = $params["bundle_id"];
						$logParams[MM_ActivityLog::$PARAM_ACCESS_IS_COMPLIMENTARY] = $params["bundle_is_complimentary"];
						MM_ActivityLog::log($user, MM_ActivityLog::$EVENT_TYPE_ACCESS_RIGHTS, $logParams);
						break;
						
					case MM_Event::$BUNDLE_STATUS_CHANGE:
						$logParams[MM_ActivityLog::$PARAM_ACCESS_EVENT] = $eventType;
						$logParams[MM_ActivityLog::$PARAM_ACCESS_ID] = $params["bundle_id"];
						$logParams[MM_ActivityLog::$PARAM_ACCESS_IS_COMPLIMENTARY] = $params["bundle_is_complimentary"];
						$logParams[MM_ActivityLog::$PARAM_ACCESS_STATUS] = $params["bundle_status"];
						MM_ActivityLog::log($user, MM_ActivityLog::$EVENT_TYPE_ACCESS_RIGHTS, $logParams);
						break;
						
					case MM_Event::$PAYMENT_RECEIVED:
					case MM_Event::$PAYMENT_REBILL:
					case MM_Event::$PAYMENT_REBILL_DECLINED:
					case MM_Event::$REFUND_ISSUED:
					case MM_Event::$BILLING_SUBSCRIPTION_UPDATED:
					case MM_Event::$BILLING_SUBSCRIPTION_REBILL_DATE_CHANGED:
					case MM_Event::$BILLING_SUBSCRIPTION_CANCELED:
					case MM_Event::$AFFILIATE_INFO_CHANGED: 
						$logParams[MM_ActivityLog::$PARAM_BILLING_EVENT] = $eventType;
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_ID] = $params["order_id"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_NUMBER] = $params["order_number"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_TOTAL] = $params["order_total"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_DISCOUNT] = $params["order_discount"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_IP_ADDRESS] = $params["order_ip_address"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_PRODUCTS] = $params["order_products"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_COUPONS] = $params["order_coupons"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_PRORATIONS] = $params["order_prorations"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_AFFFILIATE_ID] = $params["order_affiliate_id"];
						$logParams[MM_ActivityLog::$PARAM_BILLING_ORDER_SUBAFFFILIATE_ID] = $params["order_subaffiliate_id"];
						
						// get current rebill date for 'rebill date changed' event
						if($eventType == MM_Event::$BILLING_SUBSCRIPTION_REBILL_DATE_CHANGED && !empty($params["order_item_id"]))
						{
							$orderItem = new MM_OrderItem($params["order_item_id"]);
							
							if($orderItem->isValid())
							{
								$scheduledPaymentEvent = MM_ScheduledPaymentEvent::findNextScheduledEventByOrderItemId($orderItem->getId());
								if ($scheduledPaymentEvent->isValid())
								{
									$crntRebillDate = date("M d, Y", strtotime($scheduledPaymentEvent->getScheduledDate()));
									$logParams[MM_ActivityLog::$PARAM_BILLING_NEXT_REBILL_DATE] = $crntRebillDate;
								}
							}
						}
						
						if($eventType == MM_Event::$AFFILIATE_INFO_CHANGED)
						{
							$logParams[MM_ActivityLog::$PARAM_AFFILIATE_TRACKING_EVENT] = $eventType;
							MM_ActivityLog::log($user, MM_ActivityLog::$EVENT_TYPE_AFFILIATE_TRACKING, $logParams);
						}
						else 
						{
							MM_ActivityLog::log($user, MM_ActivityLog::$EVENT_TYPE_BILLING, $logParams);
						}
						break;
				}
			}
		}
	} 
	
	
	private function performActions()
	{
		if(is_array($this->actions))
		{
			foreach($this->actions as $action)
			{
				if($action->isValid() && $action->isActive())
				{	
					// check action attributes
					$doContinue = true;
					
					switch($action->getEventType())
					{
						case MM_Event::$PRODUCT_PURCHASE:
							$eventAttributes = $action->getEventAttributes();
							if(is_array($eventAttributes) && isset($eventAttributes["product_id"]))
							{
								if(isset($eventAttributes["product_id"]))
								{
									$productId = $eventAttributes["product_id"];  
									if(intval($productId) > 0 && intval($productId) != intval($this->params["product_id"]))
									{ 
										$doContinue = false;
									}
								}
							}
							break;
							
						// for the member added event, check to make sure that the membership level of the member
						// equals the push notification configuration
						case MM_Event::$MEMBER_ADD:
							$eventAttributes = $action->getEventAttributes();
							if(is_array($eventAttributes) && isset($eventAttributes["membership_level_id"]))
							{
								$membershipLevelId = $eventAttributes["membership_level_id"];
								if(intval($membershipLevelId) > 0 && intval($membershipLevelId) != intval($this->params["membership_level"]))
								{
									$doContinue = false;
								}
							}
							break;
							
						// for the membership level status change event, check to make sure that the membership level 
						// and the status of the membership level equals the push notification configuration
						case MM_Event::$MEMBER_STATUS_CHANGE:
							$eventAttributes = $action->getEventAttributes();
							if(is_array($eventAttributes))
							{
								if(isset($eventAttributes["membership_level_id"]) || isset($eventAttributes["status_id"]))
								{
									if(isset($eventAttributes["membership_level_id"]))
									{
										$membershipLevelId = $eventAttributes["membership_level_id"];
										if(intval($membershipLevelId) > 0 && intval($membershipLevelId) != intval($this->params["membership_level"]))
										{
											$doContinue = false;
										}
									}
										
									if(isset($eventAttributes["status_id"]))
									{
										$statusId = $eventAttributes["status_id"];
										if(intval($statusId) > 0 && intval($statusId) != intval($this->params["status"]))
										{
											$doContinue = false;
										}
									}
								}
							}
							break;
							
						// for the bundle added event, check to make sure that the bundle being added 
						// equals the push notification configuration
						case MM_Event::$BUNDLE_ADD:
							$eventAttributes = $action->getEventAttributes();
							if(is_array($eventAttributes) && isset($eventAttributes["bundle_id"]))
							{
								$bundleId = $eventAttributes["bundle_id"];
								if(intval($bundleId) > 0 && intval($bundleId) != intval($this->params["bundle_id"]))
								{
									$doContinue = false;
								}
							}
							break;
								
						// for the bundle status change event, check to make sure that the bundle and the status 
						// of the bundle equals the push notification configuration
						case MM_Event::$BUNDLE_STATUS_CHANGE:
							$eventAttributes = $action->getEventAttributes();
							if(is_array($eventAttributes))
							{
								if(isset($eventAttributes["bundle_id"]) || isset($eventAttributes["status_id"]))
								{
									if(isset($eventAttributes["bundle_id"]))
									{
										$bundleId = $eventAttributes["bundle_id"];
										if(intval($bundleId) > 0 && intval($bundleId) != intval($this->params["bundle_id"]))
										{
											$doContinue = false;
										}
									}
									
									if(isset($eventAttributes["status_id"]))
									{
										$statusId = $eventAttributes["status_id"];
										if(intval($statusId) > 0 && intval($statusId) != intval($this->params["bundle_status"]))
										{
											$doContinue = false;
										}
									}
								}
							}
							break;
					}
					
					if($doContinue)
					{
						switch($action->getActionType())
						{
							case MM_Action::$MM_ACTION_SEND_EMAIL:
								$this->action_sendEmail($action);
								break;
								
							case MM_Action::$MM_ACTION_NOTIFY_ZAPIER:
								$this->action_notifyZapier($action);
								break;
				
							case MM_Action::$MM_ACTION_CALL_SCRIPT:
								$this->action_callScriptUrl($action);
								break;
						}
					}
				}
			}
		}
	}
	
	private function action_sendEmail($action)
	{
		$doSendEmail = false;
		
		switch($action->getEventType())
		{
			case MM_Event::$PRODUCT_PURCHASE:  
				$actionValue = $action->getActionValue();  
				$user = new MM_User($this->params["member_id"]);
				$fromEmployee = new MM_Employee($actionValue["emailFromId"]);
				$context = new MM_Context($user, $fromEmployee);
				$context->setProduct(new MM_Product($this->params["product_id"]));
				$context->setOrder(new MM_Order($this->params["order_id"]));
				$doSendEmail = true;
				break;
			case MM_Event::$MEMBER_ADD:
			case MM_Event::$MEMBER_ACCOUNT_UPDATE:
			case MM_Event::$MEMBER_DELETE:
			case MM_Event::$MEMBER_MEMBERSHIP_CHANGE:
			case MM_Event::$MEMBER_STATUS_CHANGE:
			case MM_Event::$BUNDLE_ADD:
			case MM_Event::$BUNDLE_STATUS_CHANGE:
				$actionValue = $action->getActionValue();
				$user = new MM_User($this->params["member_id"]);
				$fromEmployee = new MM_Employee($actionValue["emailFromId"]);
				$context = new MM_Context($user, $fromEmployee);
				$doSendEmail = true;
				break;
				
			case MM_Event::$PAYMENT_RECEIVED:
			case MM_Event::$PAYMENT_REBILL:
			case MM_Event::$PAYMENT_REBILL_DECLINED:
			case MM_Event::$REFUND_ISSUED:
			case MM_Event::$COMMISSION_INITIAL:
			case MM_Event::$COMMISSION_REBILL:
			case MM_Event::$CANCEL_COMMISSION:
				$actionValue = $action->getActionValue();
				$user = new MM_User($this->params["member_id"]);
				$order = new MM_Order($this->params["order_id"]);
				$fromEmployee = new MM_Employee($actionValue["emailFromId"]);
				$context = new MM_Context($user, $fromEmployee, $order);
				
				if($action->getEventType() == MM_Event::$PAYMENT_REBILL || $action->getEventType() == MM_Event::$PAYMENT_REBILL_DECLINED)
				{
					$orderAttributes = array("is_rebill"=>true);
				}
				else 
				{
					$orderAttributes = array("is_rebill"=>false);
				}
				
				// If a transaction id exists in the parameter list, then stuff it into the order attributes.
				// This way when we do the smart tag processing, we are sure to point to the correct
				// amount for 'total'.
				if(isset($this->params["order_transaction_id"]))
				{
					if(isset($orderAttributes) && is_array($orderAttributes))
					{
						$orderAttributes["transaction_id"] = $this->params["order_transaction_id"];
					}
					else
					{
						$orderAttributes = array("transaction_id"=>$this->params["order_transaction_id"]);
					}
				}
				
				$context->setOrderAttributes($orderAttributes);
				
				$doSendEmail = true;
				break;
		}
		
		if($doSendEmail)
		{ 
			$email = new MM_Email();
			$email->setContext($context);
			$email->setSubject($actionValue["emailSubject"]);
			$email->setBody($actionValue["emailBody"]);
			$email->setFromName($fromEmployee->getDisplayName());
			$email->setFromAddress($fromEmployee->getEmail());
 
			if(isset($actionValue["emailCC"]) && !empty($actionValue["emailCC"]))
			{
				$ccEmails = explode(",", $actionValue["emailCC"]);
				
				foreach($ccEmails as $ccEmail)
				{
					$email->addCC(trim($ccEmail));
				}
			}
			
			if($actionValue["emailToId"] == MM_Action::$CURRENT_MEMBER_PLACEHOLDER)
			{
				$email->setToName($user->getFirstName());
				$email->setToAddress($user->getEmail());
			}
			else
			{
				$toEmployee = new MM_Employee($actionValue["emailToId"]);
				$email->setToName($toEmployee->getDisplayName());
				$email->setToAddress($toEmployee->getEmail());
			}
			
			$email->send();
			return new MM_Response();
		}
		else
		{
			return new MM_Response("Error sending push notification email.", MM_Response::$ERROR);
		}
	}
	
	private function action_notifyZapier($action)
	{
		$eventTypeName = MM_Event::getName($action->getEventType());
		$actionValue = $action->getActionValue();
		$user = new MM_User($this->params["member_id"]);
		$fromEmployee = new MM_Employee($actionValue["emailFromId"]);
		$context = new MM_Context($user, $fromEmployee);
		
		$body = "";
		
		// TODO review this mechanism for effectiveness in parsing content
		// the contents of $this->params is generated by one of the package...() functions in the MM_Event class
		foreach($this->params as $key=>$value)
		{	
			if(!empty($value))
			{
				$decodedValue = json_decode($value);
				
				if(!is_array($decodedValue))
				{
					$body .= "{$key}: {$value}";
				}
				else if(!empty($decodedValue))
				{	
					foreach($decodedValue as $arrIndex=>$arrValue)
					{
						$body .= "{$key}[{$arrIndex}]: ";
					
						if(is_object($arrValue))
						{
							$body .= "\n";
							
							foreach($arrValue as $objKey=>$objValue)
							{
								$body .= "-{$arrIndex}- {$objKey}: {$objValue}\n";
							}
						}
						else
						{
							$body .= "{$arrValue}\n";
						}
					}
				}
			}
			else
			{
				$body .= "{$key}:";
			}
					
			$body .= "\n";
		}
		
		if(!empty($actionValue["zapierAdditionalInfo"]))
		{
			$body .= "\n================= ADDITIONAL INFO =================\n";
			$body .= $actionValue["zapierAdditionalInfo"];
		}
		
		$email = new MM_Email();
		$email->setContext($context);
		$email->setSubject("Zapier Notification ({$eventTypeName})");
		$email->setBody($body);
		$email->setFromName($fromEmployee->getDisplayName());
		$email->setFromAddress($fromEmployee->getEmail());
			
		$email->setToName("Zapier");
		$email->setToAddress($actionValue["zapierMailbox"]);
			
		$email->send();
		return new MM_Response();
	}
	
	private function action_callScriptUrl($action)
	{
		$actionValue = $action->getActionValue();
 
		$url = "";
		
		if(is_array($actionValue) && isset($actionValue["scriptUrl"]))
		{
			$url = $actionValue["scriptUrl"];
		}
		
		if(!empty($url))
		{	
			$postvars = "event_type={$action->getEventType()}&";
			$postvars .= $this->arrayToQuerystring($this->params);
			
			if(preg_match("/(\?)/", $url))
			{
				$url = $url."&".$postvars;
			}
			else
			{
				$url = $url."?".$postvars;
			}
			
			$ch = curl_init($url);
			curl_setopt($ch, CURLOPT_POST, 0);
			curl_setopt($ch, CURLOPT_HEADER, 0);
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);  
			$contents = curl_exec($ch);
			curl_close($ch);
		}
	}
	
	private function arrayToQuerystring($params)
	{	
		$querystring = "";
		foreach($params as $key=>$value)
		{
			if(!is_array($value))
			{
				$querystring .= $key."=".urlencode($value)."&";
			}
		}
		return $querystring;
	}
}
