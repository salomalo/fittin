/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 */
class MM_LimeLightProduct extends MM_Entity
{	
	private $mmProductId = "";
	private $limeLightProductId = "";
	private $limeLightProductName = "";
	private $limeLightCampaignId = "";
	private $limeLightCampaignName = "";
	
	private $lastLimeLightCampaignId = "";
	private $lastLimeLightProductId = "";
	
	public function getData() 
	{
		global $wpdb;
		
		$sql = "SELECT * FROM ".MM_TABLE_LIMELIGHT_PRODUCTS." WHERE id='".$this->id."';";
		$result = $wpdb->get_row($sql);
		
		if($result) 
		{
			$this->setData($result);
		}
		else {
			parent::invalidate();
		}
	}
	
	public function setData($data)
	{
		try 
		{
			$this->mmProductId = $data->membermouse_product_id;
			$this->limeLightProductId = $data->limelight_product_id;
			$this->limeLightProductName = $data->limelight_product_name;
			$this->limeLightCampaignId = $data->limelight_campaign_id;
			$this->limeLightCampaignName = $data->limelight_campaign_name;
			parent::validate();
		}
		catch (Exception $ex) 
		{
			parent::invalidate();
		}
	}
	
	public function commitData()
	{	
		global $wpdb;
		
		if(!MM_MemberMouseService::hasPermission(MM_MemberMouseService::$PYMT_SERVICE_LIMELIGHT))
		{
			return new MM_Response("ERROR: Lime Light is not active for this MemberMouse license", MM_Response::$ERROR);
		}
		
		$doUpdate = isset($this->id) && $this->id != "" && intval($this->id) > 0;
		 
		MM_Transaction::begin();
		try
		{	
			// check if campaign/product pair is already set
			if(!$doUpdate || ((!empty($this->lastLimeLightCampaignId) && ($this->lastLimeLightCampaignId != $this->limeLightCampaignId))
				|| (!empty($this->lastLimeLightProductId) && ($this->lastLimeLightProductId != $this->limeLightProductId))))
			{
				$sql = "SELECT membermouse_product_id FROM ".MM_TABLE_LIMELIGHT_PRODUCTS." WHERE limelight_product_id='".$this->limeLightProductId."' AND ";
				$sql .= "limelight_campaign_id='".$this->limeLightCampaignId."';";
				$result = $wpdb->get_row($sql);
				
				if($result)
				{
					MM_Transaction::rollback();
					$product = new MM_Product($result->membermouse_product_id);
					$productName = ($product->isValid()) ? $product->getName() : "";
						
					$errorMsg = "The Lime Light product '{$this->limeLightProductName}' in campaign '{$this->limeLightCampaignName}'\n";
					$errorMsg .= "is already associated with MemberMouse product '{$productName}'";
					return new MM_Response($errorMsg, MM_Response::$ERROR);
				}
			}
			
			if(!$doUpdate) 
			{	
				$sql = "insert into ".MM_TABLE_LIMELIGHT_PRODUCTS." set " .
			 			"	membermouse_product_id='%d'," .
			 			"	limelight_product_id='%d'," .
			 			"	limelight_product_name='%s'," .
			 			"	limelight_campaign_id='%d'," .
			 			"	limelight_campaign_name='%s'" .
			 			"";
			}
			else 
			{	
				$sql = "update ".MM_TABLE_LIMELIGHT_PRODUCTS." set " .
			 			"	membermouse_product_id='%d'," .
			 			"	limelight_product_id='%d'," .
			 			"	limelight_product_name='%s'," .
			 			"	limelight_campaign_id='%d'," .
			 			"	limelight_campaign_name='%s'" .
			 			"	where id='{$this->id}'" .
			 			"";
		 	}
		 	
		 	$preparedSql = $wpdb->prepare($sql, $this->mmProductId, $this->limeLightProductId, $this->limeLightProductName, 
		 										$this->limeLightCampaignId, $this->limeLightCampaignName);
		 	
		 	$result = $wpdb->query($preparedSql);
		 	
			if($result === false)
		 	{
		 		MM_Transaction::rollback();
		 		return new MM_Response("Error creating product mapping", MM_Response::$ERROR);
		 	}
		 	
		 	if(!$doUpdate) 
		 	{
		 		$this->id = $wpdb->insert_id;
		 	}
		}
		catch(Exception $ex)
		{
		 	MM_Transaction::rollback();
	 		return new MM_Response("Error creating product mapping", MM_Response::$ERROR);
		}
		 
		MM_Transaction::commit();
		
		return new MM_Response();
	}
	
	public function delete()
	{	
		global $wpdb;
		
		$sql = "DELETE FROM ".MM_TABLE_LIMELIGHT_PRODUCTS." WHERE id='%d' LIMIT 1";
		$results = $wpdb->query($wpdb->prepare($sql, $this->id));
		
		if($results) 
		{
			return true;
		}
		
		return false;
	}
	
	
	/** HELPER METHODS **/
	
	public static function findByMMProductId($productId)
	{
		if (empty($productId))
		{
			return new MM_LimeLightProduct();
		}
		
		global $wpdb;
 		
		$sql = "SELECT id FROM ".MM_TABLE_LIMELIGHT_PRODUCTS." WHERE membermouse_product_id='%s' LIMIT 1;";
		$llProductIndex = $wpdb->get_var($wpdb->prepare($sql,$productId));
		
		if (!is_null($llProductIndex))
		{
			return new MM_LimeLightProduct($llProductIndex);
		}
		return new MM_LimeLightProduct(); //return an invalid entity if the product mapping could not be found
	}
	
	public static function getUnmappedProducts()
	{
		global $wpdb;
	
		$sql = "SELECT p.* from ".MM_TABLE_PRODUCTS." p LEFT JOIN ".MM_TABLE_LIMELIGHT_PRODUCTS." llp ON (p.id = llp.membermouse_product_id) where llp.membermouse_product_id IS NULL order by membermouse_product_id asc";
		$rows = $wpdb->get_results($sql);
	
		$products = array();
	
		foreach($rows as $row)
		{
			$products[$row->id] = $row->name;
		}
	
		return $products;
	}
	
	
	/** GETTERS/SETTERS **/
	
	public function setMMProductId($id) 
	{
		$this->mmProductId = $id;
	}
	
	public function getMMProductId()
	{
		return $this->mmProductId;
	}
	
	public function setLimeLightProductId($id)
	{
		$this->lastLimeLightProductId = $this->limeLightProductId;
		$this->limeLightProductId = $id;
	}
	
	public function getLimeLightProductId()
	{
		return $this->limeLightProductId;
	}
	
	public function setLimeLightProductName($str)
	{
		$this->limeLightProductName = $str;
	}
	
	public function getLimeLightProductName()
	{
		return $this->limeLightProductName;
	}
	
	public function setLimeLightCampaignId($id)
	{
		$this->lastLimeLightCampaignId = $this->limeLightCampaignId;
		$this->limeLightCampaignId = $id;
	}
	
	public function getLimeLightCampaignId()
	{
		return $this->limeLightCampaignId;
	}
	
	public function setLimeLightCampaignName($str)
	{
		$this->limeLightCampaignName = $str;
	}
	
	public function getLimeLightCampaignName()
	{
		return $this->limeLightCampaignName;
	}
}
