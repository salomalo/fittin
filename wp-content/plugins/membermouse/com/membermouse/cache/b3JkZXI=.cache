/**
 * 
 * MemberMouse(TM) (http://www.membermouse.com)
 * (c) MemberMouse, LLC. All rights reserved.
 * 
 * 
 * MM_Order represents an order and all of the non-product information that goes with it (billing & shipping addresses, status,
 * totals, etc). It also is a container for the objects representing the payment service, products and coupons, although these are stored 
 * in separate db tables.
 * 
 * Order status is indicated as follows:
 * 
 * PENDING - order has been created but not guaranteed to have been persisted to the database. It has not been validated and a payment service has not been attached
 * AWAITING_PAYMENT - order has been persisted, validated, and should have a valid payment service attached. No successfuls payments have been made
 * PAID_COMPLETE - paid/complete. A successful payment has been made against the order, or in the case of a free product, the order is in a completed state without payment
 *
 * An important thing to note about the order is that total calculation can be very expensive, especially in the case where a coupon is applied.
 * Because some coupons apply a percentage discount to the entire order, every product has to be examined to calculate the exact discount. This means that
 * ALL of the linked product entities have to be loaded as a result of that call. Due to this behavior, subtotal/total calculation is limited to being done only 
 * as the result of a manual call to calculateTotal, so be aware that if the order is modified after calculation, the totals may be out of sync with the order state
 *
 */
class MM_Order extends MM_Entity
{	
	// this is used to create an order object with sample data in it
	public static $SAMPLE_ORDER_ID = "-10";
	
	private $order_number = 0;
	private $customer = null;
	
	private $paymentMethod = null;
	private $billingAddress = null;
	private $shippingAddress = null;
	
	private $shippingOptionDescription = null;
	private $shippingOptionKey = null;
	
	private $subtotal = 0.00;
	private $tax = 0.00;
	private $shipping = 0.00;
	private $discount = 0.00;
	private $total = 0.00;
	private $currency = "";
	
	private $orderDate = null;
	private $orderUpdated = null;
	
	private $order_status = 0; //default status is pending
	private $orderProducts = array();
	private $orderCoupons = array();
	private $orderProrations = array();
	
	private $dateAdded = "";
	private $dateModified = "";
	
	private $isShippable = false;  //transient
	private $shippingSameAsBilling = false; //transient
	
	private $affiliateId = "";
	private $subAffiliateId = "";
	
	private $ipAddress = "";
	
	private $formSubmissionId = null;
	
	private $isTest = false;
	
	public static $PENDING = 0;
	public static $AWAITING_PAYMENT = 1;
	public static $PAID_COMPLETE = 2;
	public static $ERROR_FAILED = 3;
	
	public function __construct($id="", $getData=true)
	{
		//set default address values
		$this->billingAddress  = new MM_CustomerAddress();
		$this->shippingAddress = new MM_CustomerAddress();
		
		//set default currency
		$this->currency = MM_CurrencyUtil::getActiveCurrency();
		$this->ipAddress = MM_Utils::getClientIPAddress();
		
		if(!($id instanceof MM_Response))
		{
			if(isset($id) && (intval($id) > 0 || intval($id) == self::$SAMPLE_ORDER_ID))
			{
				$this->id = $id;
					
				if($getData == true)
				{
					$this->getData();
				}
			}
			else
			{
				$id = "";
			}
		}
	}
	
	
	/**
	 * Destroy removes any circular references between the order and its order items. In PHP <= 5.2, and 5.3+ when using the old garbage collector, 
	 * destroy() must be called manually on an order to free the used memory. In THEORY, PHP 5.4+ can do this automatically
	 */
	public function destroy() 
	{
		if (isset($this->orderProducts))
		{
			foreach ($this->orderProducts as $productItem)
			{
				$productItem->destroy();
			}
			unset($this->orderProducts);
		}
		
		if (isset($this->orderCoupons))
		{
			foreach ($this->orderCoupons as $couponItem)
			{
				$couponItem->destroy();
			}
			unset($this->orderCoupons);
		}
		
		if (isset($this->orderProrations))
		{
			foreach ($this->orderProrations as $prorationItem)
			{
				$prorationItem->destroy();
			}
			unset($this->orderProrations);
		}
	}
	
	
	/**
	 * MM_Order::getData retrieves stored order information. It attempts to use the order number for retrieval first, if this is not set then
	 * it checks to see if the id has been set. If the id has not been set, the method returns false to indicate that the order cannot be retrieved (insufficient data) 
	 * @see MM_Entity::getData()
	 */
	public function getData() 
	{
		if($this->id != self::$SAMPLE_ORDER_ID)
		{
			global $wpdb;
			$sql = "select * from ".MM_TABLE_ORDERS." where ";
			if ($this->order_number != 0) 
			{
				$sql.="order_number='{$this->order_number}'";
			}
			else if ($this->id != 0) 
			{
				$sql.="id='{$this->id}'";
			}
			else 
			{
				return false;
			}
			
			$result = $wpdb->get_row($sql);
			if($result) 
			{
				$this->setData($result);
			}
			else 
			{
				parent::invalidate();
			}
		}
		else
		{
			// populate sample data
			$this->id = self::$SAMPLE_ORDER_ID;
			$this->customer = new MM_User(MM_User::$SAMPLE_USER_ID);
			$this->order_number = "100001";
			$this->subtotal = "80.00";
			$this->discount = "10.00";
			$this->shipping = "5.00";
			$this->tax = "0.00";
			$this->total = "75.00";
			$this->currency = MM_CurrencyUtil::getActiveCurrency();
			$this->billingAddress = new MM_CustomerAddress();
			$this->billingAddress->setAddressLine1("123 Sample St.");
			$this->billingAddress->setCity("Sample City");
			$this->billingAddress->setState("NY");
			$this->billingAddress->setPostalCode("12345");
			$this->billingAddress->setCountry("US");
			$this->shippingAddress = new MM_CustomerAddress();
			$this->shippingAddress->setAddressLine1("123 Sample St.");
			$this->shippingAddress->setCity("Sample City");
			$this->shippingAddress->setState("NY");
			$this->shippingAddress->setPostalCode("12345");
			$this->shippingAddress->setCountry("US");
			$this->dateAdded = MM_Utils::getCurrentTime();
			$this->dateModified = MM_Utils::getCurrentTime();
			$this->shippingOptionDescription = "(FLATRATE) Ground";
			$this->affiliateId = "sampleaffiliate";
			$this->subAffiliateId = "samplesubaffiliate";
			$this->ipAddress = "100.1.1.1";
			
			parent::validate();
		}
	}
	
	public function setData($data)
	{
		global $wpdb;
		
		try 
		{
			$this->id = $data->id;
			$this->customer = new MM_User($data->user_id);
			
			$this->billingAddress = new MM_CustomerAddress();
			$this->billingAddress->setBillingAddress($data);
			$this->shippingAddress = new MM_CustomerAddress();
			$this->shippingAddress->setShippingAddress($data);
			
			$this->order_number = $data->order_number;
			$this->subtotal = $data->subtotal;
			$this->discount = $data->discount;
			$this->shipping = $data->shipping;
			$this->tax = $data->tax;
			$this->total = $data->total;
			$this->currency = $data->currency;
			$this->order_status = $data->status;
			$this->dateAdded = $data->date_added;
			$this->dateModified = $data->date_modified;
			$this->shippingOptionDescription = $data->shipping_option_description;
			
			$this->affiliateId = $data->affiliate_id;
			$this->subAffiliateId = $data->sub_affiliate_id;
			$this->formSubmissionId = $data->form_submission_id;
			$this->ipAddress = $data->ip_address;
			$this->isTest = ($data->is_test == 1);
			
			//create and attach payment service object
			if (isset($data->payment_id))
			{
				$this->setPaymentMethod(MM_PaymentServiceFactory::getPaymentServiceById($data->payment_id));
			}
			
			//fetch order items
			$this->orderItems   = array();
			$this->orderCoupons = array();
			$this->orderProrations = array();
			$oisql = "select * from ".MM_TABLE_ORDER_ITEMS." where order_id = '{$this->id}'";
			$results = $wpdb->get_results($oisql);
			foreach ($results as $orderItemData)
			{
				$newItem = new MM_OrderItem($orderItemData->id, false,$this); //saying false here saves us from having to make another trip to db to get the same data
				$newItem->setData($orderItemData);
				$newItem->validate();
				if ($newItem->getItemType() == MM_OrderItem::$ORDER_ITEM_TYPE_PRODUCT)
				{
					$this->orderProducts[$orderItemData->item_id] = $newItem;
				}
				else if ($newItem->getItemType() == MM_OrderItem::$ORDER_ITEM_TYPE_DISCOUNT)
				{
					$this->orderCoupons[$orderItemData->item_id] = $newItem;
				}
				else if ($newItem->getItemType() == MM_OrderItem::$ORDER_ITEM_TYPE_PRORATION)
				{
					$this->orderProrations[] = $newItem;
				}
			}
			
			parent::validate();
		}
		catch (Exception $ex)
		{
			parent::invalidate();
		}
	}
	
	public function commitData()
	{	
		global $wpdb;
		
		//cant commit with no items
		if (!is_array($this->orderProducts) || (count($this->orderProducts) == 0))
		{
			return new MM_Response("Unable to save order: Order has no products",MM_Response::$ERROR);
		}
		
		//cant commit with no customer either
		if (is_null($this->customer) || !($this->customer instanceof MM_User))
		{
			return new MM_Response("Unable to save order: Order has no customer",MM_Response::$ERROR);
		}
				
		//if customer hasnt been committed, commit. 
		if (!$this->customer->isValid())
		{
			$customerResponse = $this->customer->commitData();
			if ($customerResponse->type == MM_Response::$ERROR)
			{
				$customerResponse->message = "Unable to save order: ".$customerResponse->message;
				return $customerResponse;
			}
		}
		
		$this->calculateTotal(); //make sure the total is accurate
		$isUpdate = (intval($this->id) >0)?true:false;
		
		$orderData = array(
			"order_number"                 =>  $this->order_number,
			"user_id"                      =>  $this->customer->getId(),
			"affiliate_id"                 =>  $this->affiliateId,
			"sub_affiliate_id"             =>  $this->subAffiliateId,
			"billing_first_name"           =>  $this->billingAddress->getFirstName(),
			"billing_last_name"            =>  $this->billingAddress->getLastName(),
			"billing_phone"				   =>  $this->billingAddress->getPhone(),
			"billing_address1"             =>  $this->billingAddress->getAddressLine1(),
			"billing_address2"             =>  $this->billingAddress->getAddressLine2(),
			"billing_city"                 =>  $this->billingAddress->getCity(),
			"billing_state"                =>  $this->billingAddress->getState(),
			"billing_province"             =>  $this->billingAddress->getProvince(),
			"billing_postal_code"          =>  $this->billingAddress->getPostalCode(),
			"billing_country"              =>  $this->billingAddress->getCountry(),
			"shipping_first_name"          =>  $this->shippingAddress->getFirstName(),
			"shipping_last_name"           =>  $this->shippingAddress->getLastName(),
			"shipping_phone"			   =>  $this->shippingAddress->getPhone(),
			"shipping_address1"            =>  $this->shippingAddress->getAddressLine1(),
			"shipping_address2"            =>  $this->shippingAddress->getAddressLine2(),
			"shipping_city"                =>  $this->shippingAddress->getCity(),
			"shipping_state"               =>  $this->shippingAddress->getState(),
			"shipping_province"            =>  $this->shippingAddress->getProvince(),
			"shipping_postal_code"         =>  $this->shippingAddress->getPostalCode(),
			"shipping_country"             =>  $this->shippingAddress->getCountry(),
			"shipping_option_key"          =>  $this->shippingOptionKey,
			"shipping_option_description"  =>  $this->shippingOptionDescription,
			"subtotal"                     =>  $this->subtotal,
			"discount"                     =>  $this->discount,
			"shipping"                     =>  $this->shipping,
			"tax"                          =>  $this->tax,
			"total"                        =>  $this->total,
			"currency"                     =>  $this->currency,
			"form_submission_id"                     =>  $this->formSubmissionId,
			"status"                       =>  $this->order_status,
			"is_test"					   =>  $this->isTest?1:0
		);
		
		if(!is_null($this->paymentMethod))
		{
			$orderData["payment_id"] = $this->paymentMethod->getId();
		}
		
		//begin transaction
		MM_Transaction::begin();
		try
		{
			if (!$isUpdate)
			{
				//this is a new record
				$orderNumberGenerator = MM_OrderNumberGeneratorFactory::getOrderNumberGenerator(MM_OrderNumberGenerator::$DEFAULT);
				$orderData["order_number"] = $orderNumberGenerator->preCommit($this);
				$orderData["date_added"]   = MM_Utils::getCurrentTime();
				$orderData["ip_address"]   = $this->ipAddress;
					
				$result = $wpdb->insert(MM_TABLE_ORDERS,$orderData);
				if($result === false)
				{
					throw new Exception("unable to create order id {$this->id}: error = ".$wpdb->last_error);
				}
				
				$this->id = $wpdb->insert_id;
				
				$this->setOrderNumber($orderNumberGenerator->postCommit($this));
				$wpdb->update(MM_TABLE_ORDERS,array("order_number"=>$this->getOrderNumber()), array("id"=>$this->id));
				
				//write entry to the transaction log
				$transactionDescription = "Order #".$this->getOrderNumber()." created";
				if ($this->isTest())
				{
					MM_TransactionLog::createTestTransactionEntry($this->id, null, $this->total,$this->currency, $transactionDescription,MM_TransactionLog::$TRANSACTION_TYPE_CHARGE,false);
				}
				else 
				{
					MM_TransactionLog::createTransactionEntry($this->id, null, $this->total,$this->currency, $transactionDescription,MM_TransactionLog::$TRANSACTION_TYPE_CHARGE,false);
				}
			}
			else
			{
				$orderData["date_modified"] = MM_Utils::getCurrentTime();
				$whereClause = array("id" => $this->id);
				
				$result = $wpdb->update(MM_TABLE_ORDERS, $orderData, $whereClause);
				if($result === false)
				{
					throw new Exception("unable to update order id {$this->id}: error = ".$wpdb->last_error);
				}
			}
			parent::validate();
			
			//commit order items
			$combinedLineItems = array_merge($this->orderProducts, $this->orderCoupons, $this->orderProrations);
			foreach ($combinedLineItems as $lineItem)
			{	
				$lineItem->setOrderId($this->id);
				$lineItemResponse = $lineItem->commitData();
				if (!($lineItemResponse instanceof MM_Response) || ($lineItemResponse->type == MM_Response::$ERROR))
				{
					throw new Exception(($lineItemResponse instanceof MM_Response)?$lineItemResponse->message:"Error saving one of the order items");
				}
			}
		}
		catch (Exception $ex)
		{
			MM_Transaction::rollback();
			parent::invalidate();
			return new MM_Response($ex->getMessage(),MM_Response::$ERROR);
		}
		MM_Transaction::commit();

		/*
		 * Push notification for product purchased.
		 */
		foreach($this->orderProducts as $orderItem)
		{
			do_action(MM_Event::$PRODUCT_PURCHASE, MM_Event::packageProductData($orderItem->getItemId(), $this->customer->getId(), $this->id, $orderItem->getId()));
		}
		return new MM_Response(); //success
	}
	
	
	public function addProduct(MM_Product $product, $quantity=1, $isGift=false)
	{
		if (isset($this->orderProducts[$product->id]))
		{
			$this->orderProducts[$product->id]->setQuantity($this->orderProducts[$product->id]->getQuantity() + $quantity);
		}
		else
		{
			if ($product->isShippable())
			{
				$this->isShippable = true;
			}
			$newItem = new MM_OrderItem();
			$newItem->setItemType(MM_OrderItem::$ORDER_ITEM_TYPE_PRODUCT);
			$newItem->setItemId($product->id);
			$newItem->setDescription($product->getName());
			$newItem->setQuantity($quantity);
			$newItem->setAmount(($product->hasTrial())?$product->getTrialAmount(false):$product->getPrice(false));
			$newItem->setIsGift($isGift);
			$newItem->setCurrency($this->currency);
			
			if ($product->hasTrial())
			{
				$newItem->setTrialAmount($product->getTrialAmount());
				$newItem->setTrialDuration($product->getTrialDuration());
				$newItem->setTrialFrequency($product->getTrialFrequency());
				$newItem->setRecurringAmount($product->getPrice(false));
			}
			if ($product->isRecurring())
			{
				$newItem->setIsRecurring(true);
				$newItem->setRecurringAmount($product->getPrice(false));
				$newItem->setRebillPeriod($product->getRebillPeriod());
				$newItem->setRebillFrequency($product->getRebillFrequency());
				if ($product->doLimitPayments())
				{
					$newItem->setMaxRebills($product->getNumberOfPayments());
				}
			}
			$this->orderProducts[$product->id] = $newItem;
		}
	}
	
	public function removeProduct(MM_Product $product, $quantity=1)
	{
		//if the request product is attached to the order, is an order item, and is designated as a product...
		if (isset($this->orderProducts[$product->id]) && ($this->orderProducts[$product->id] instanceof MM_OrderItem) && ($this->orderProducts[$product->id]->getItemType() == MM_OrderItem::$ORDER_ITEM_TYPE_PRODUCT))
		{
			//reduce the quantity by the specified amount. If this takes the quantity to <=0, remove it altogether
			$newQuantity = ($this->orderProducts[$product->id]->getQuantity() - $quantity);
			if ($newQuantity <= 0)
			{
				unset($this->orderProducts[$product->id]);
			}
			else 
			{
				$this->orderProducts[$product->id]->setQuantity($newQuantity);
			}
		}
	}
	
	/**
	 * removeAllProducts removes all the product items from the order. Discounts and any future item types are currently left alone
	 */
	public function removeAllProducts()
	{
		$this->orderProducts = array();
	}
	
	/**
	 * Retrieve the MM_OrderItems representing products associated with this order
	 * 
	 * @return array of MM_OrderItem with item type MM_OrderItem::$ORDER_ITEM_TYPE_PRODUCT
	 */
	public function getProducts()
	{		
		return $this->orderProducts;
	}
	
	
	/**
	 * Set the customer
	 * 
	 * @param MM_User $customer The customer attached to the order
	 */
	public function setCustomer(MM_User $customer) 
	{
		$this->customer = $customer;
	}
	
	
	/**
	 * Return the customer
	 * 
	 * @return MM_User The customer attached to the order
	 */
	public function getCustomer()
	{
		return $this->customer;
	}
	
	
	/**
	 * Set the billing address
	 * 
	 * @param MM_CustomerAddress $billingAddress The billing address for the order
	 */
 	public function setBillingAddress(MM_CustomerAddress $billingAddress)
 	{
 	 	$this->billingAddress = $billingAddress;
 	}

 	
 	/**
 	 * Returns the billing address for the order
 	 * 
 	 * @return MM_CustomerAddress The billing address for the order
 	 */
 	public function getBillingAddress()
 	{
 	 	return $this->billingAddress;
 	}
 	 
 	public function setShippingAddress(MM_CustomerAddress $str)
 	{
 	 	$this->shippingAddress = $str;
 	}

 	
 	/**
 	 * Returns the shipping address
 	 * 
 	 * @return MM_CustomerAddress The shipping address
 	 */
 	public function getShippingAddress()
 	{
 	 	return $this->shippingAddress;
 	}
 	
	public function setTotal($total)
	{
		$this->total = $total;
	}
	
	public function getTotal($doFormat=false)
	{
		if ($doFormat)
		{
			return _mmf($this->total,$this->currency);
		}
		else
		{
			return number_format(floatval($this->total),MM_CurrencyUtil::getPrecisionForCurrency($this->currency),'.','');
		}
	}
	
	
	/**
	 * Return the tax amount associated with the order
	 * 
	 * @param boolean $doFormat (optional) If true, returns this floating point number as a string representation with 2 decimal places, suitable for representing currency
	 */
	public function getTax($doFormat=false)
	{
		if ($doFormat)
		{
			return _mmf(floatval($this->tax),$this->currency);
		}
		else
		{
			return number_format(floatval($this->tax),MM_CurrencyUtil::getPrecisionForCurrency($this->currency),'.','');
		}
	}
	
	
	/**
	 * Sets the tax amount for this order
	 * 
	 * @param float $tax The amount of tax to charge with this order
	 */
	public function setTax($tax)
	{
		$this->tax = $tax;
	}
	
	public function calculateTotal($doFormat=false)
	{
		//tax is ignored for now
		$newSubtotal = 0.00;
		$newDiscount = 0.00;
		foreach ($this->orderProducts as $anItem)
		{
			if ($anItem->getItemType() == MM_OrderItem::$ORDER_ITEM_TYPE_PRODUCT)
			{
				$newSubtotal += $anItem->calculateTotal();
			}
		}
		
		foreach ($this->orderCoupons as $anItem)
		{
			if ($anItem->getItemType() == MM_OrderItem::$ORDER_ITEM_TYPE_DISCOUNT)
			{
				$newDiscount += $anItem->calculateTotal();
			}
		}
		
		foreach ($this->orderProrations as $anItem)
		{
			if ($anItem->getItemType() == MM_OrderItem::$ORDER_ITEM_TYPE_PRORATION)
			{
				$newDiscount += $anItem->calculateTotal();
			}
		}
		
		$this->subtotal = $newSubtotal;
		$this->discount = $newDiscount;
		$this->total = $newSubtotal - abs($newDiscount) + floatval($this->shipping);
		
		//don't let an order total go less than $0
		$this->total = ($this->total>=0)?$this->total:0.00;
		
		return ($doFormat)?_mmf($this->total,$this->currency):number_format(floatval($this->total),MM_CurrencyUtil::getPrecisionForCurrency($this->currency),'.','');
	}
	
 	
	public function setPaymentMethod(MM_PaymentService $paymentMethod=null) 
	{
		$this->paymentMethod = $paymentMethod;
	}
	
	
	public function getPaymentMethod()
	{
		return $this->paymentMethod;
	}
	
	
	public function setAffiliateId($str) 
	{
		$this->affiliateId = $str;
	}
	
	
	public function getAffiliateId()
	{
		return $this->affiliateId;
	}	
	
	
	public function setSubAffiliateId($str) 
	{
		$this->subAffiliateId = $str;
	}
	
	
	public function getSubAffiliateId()
	{
		return $this->subAffiliateId;
	}	
	
	
	public function setIPAddress($str)
	{
		$this->ipAddress = $str;
	}	
	
	
	public function getIPAddress()
	{
		return $this->ipAddress;
	}
	
	
	/**
	 * Retrieve the MM_OrderItems representing coupons associated with this order
	 *
	 * @return array of MM_OrderItem with item type MM_OrderItem::$ORDER_ITEM_TYPE_DISCOUNT
	 */
	public function getCoupons()
	{
		return $this->orderCoupons;
	}
	
	
	public function addCoupon(MM_Coupon $coupon)
	{
		if (!isset($this->orderCoupons[$coupon->getId()]))
		{
			$newItem = new MM_OrderItem("",true,$this);
			$newItem->setItemType(MM_OrderItem::$ORDER_ITEM_TYPE_DISCOUNT);
			$newItem->setItemId($coupon->getId());
			$newItem->setDescription($coupon->getCouponName());
			$newItem->setQuantity(1);
			$this->orderCoupons[$coupon->getId()] = $newItem;
		}
	}
	
	
	public function removeCoupon($coupon)
	{
		if (isset($this->orderCoupons[$coupon->getId()]))
		{
			unset($this->orderCoupons[$coupon->getId()]);
		}
	}
	
	
	public function removeAllCoupons()
	{
		$this->orderCoupons = array();
	}
	
	/**
	 * Retrieve the MM_OrderItems representing prorations associated with this order
	 *
	 * @return array of MM_OrderItem with item type MM_OrderItem::$ORDER_ITEM_TYPE_PRORATION
	 */
	public function getProrations()
	{
		return $this->orderProrations;
	}
	
	
	public function addProration(MM_OrderItem $prorationItem)
	{
		$this->orderProrations[] = $prorationItem;
	}
	
	
	public function removeAllProrations()
	{
		$this->orderProrations = array();
	}
	
	/*
	 * action methods
	 */
	
	public static function createFromCart(MM_User $customer, MM_ShoppingCart $cart)
	{
		$order = new MM_Order();
		$order->setCustomer($customer);
		foreach ($cart->getProductsInCart() as $product_id=>$cartItem) //add products
		{
			if ($cartItem instanceof MM_ShoppingCartItem) //enforce correct cart structure
			{
				$order->addProduct($cartItem->getItem(),$cartItem->getQuantity());
			}
		}
		foreach ($cart->getCouponsInCart() as $coupon_id=>$cartCoupon) //add coupons
		{
			if ($cartCoupon instanceof MM_ShoppingCartItem) //make sure its a coupon
			{
				$order->addCoupon($cartCoupon->getItem());
			}
		}
		
		$order->setBillingAddress($cart->getBillingAddress());
		$order->setShippingAddress($cart->getShippingAddress());
		return $order;
	}
	
	
	/**
	 * Retrieve an order by the order number
	 * @param String $orderNumber A string representing the order number, generally (but not necessarily) numeric
	 * @return MM_Order entity that is valid and populated if the order number exists, or an invalid MM_Order object if the order number does not exist
	 */
	public static function getDataByOrderNumber($orderNumber)
	{
		if (empty($orderNumber))
		{
			return new MM_Order();
		}
		
		global $wpdb;
 		
		$sql = "SELECT id FROM ".MM_TABLE_ORDERS." WHERE order_number='%s' LIMIT 1;";
		$orderId = $wpdb->get_var($wpdb->prepare($sql,$orderNumber));
		
		if (!is_null($orderId))
		{
			return new MM_Order($orderId);
		}
		return new MM_Order(); //return an invalid entity if the order could not be found
	}
	
	/**
	 * This method returns the user ID associatd with the order ID passed. It is meant to be used as 
	 * an efficient measn for retrieving the user ID without having to load the entire order object. 
	 * @param Number $orderId the order ID to get the assoicated user ID for
	 * @return Number the user ID associated with the order ID passed. -1 if no associated user ID found.
	 */
	public static function getUserIdByOrderId($orderId)
	{
		if(isset($orderId) && (intval($orderId) > 0 || intval($orderId) == MM_Order::$SAMPLE_ORDER_ID))
		{
			global $wpdb;
				
			$sql = "SELECT user_id FROM ".MM_TABLE_ORDERS." WHERE id='%s' LIMIT 1;";
			$userId = $wpdb->get_var($wpdb->prepare($sql,$orderId));
		
			if (!is_null($userId))
			{
				return $userId;
			}
		}

		return -1;
	}
	
	/**
	 * This method will check for any other submissions submitted by this user that match the same $formId.  
	 * This will be useful in preventing duplicate orders accidently processed by multi-click or back button scenarios.
	 * 
	 * @param string $formId the submission form id 
	 * @param int $userId current user checking out
	 * @return true if form submission is found, otherwise false.
	 */
	public static function hasFormSubmissionId($formId,$userId)
	{
		global $wpdb;
		
		if(!is_null($formId) && !empty($formId) && strlen($formId)>0)
		{ 
			$sql = "SELECT count(*) as total FROM ".MM_TABLE_ORDERS." WHERE form_submission_id='%s' AND user_id='%s';";
			$total = $wpdb->get_var($wpdb->prepare($sql,$formId,$userId));
		
			if (!is_null($total) && intval($total)>0)
			{
				return true;
			}  
		}
		return false;
	}
	
	
	/**
	 * Looks up an order using a form submission id and a user id, and returns an order object
	 * 
	 * @param string $formSubmissionId The unique id assigned to the form that created this order. The form field name is mm_submission_mutex
	 * @param integer $userId The id identifying the user the order should belong to
	 * 
	 * @return MM_Order representing the order if found, null otherwise
	 * 
	 */
	public static function getOrderByUserAndFormSubmissionId($formSubmissionId,$userId)
	{
		global $wpdb;
		
		$ordersTable = MM_TABLE_ORDERS;
		$sql = "SELECT * FROM {$ordersTable} WHERE (form_submission_id) = %s AND (user_id = %s)";
		$row = $wpdb->get_row($wpdb->prepare($sql,$formSubmissionId,$userId));
		if (!empty($row))
		{
			$order = new MM_Order();
			$order->setData($row);
			return $order;
		}
		else 
		{
			return null;
		}
		
	}
	
	
	public function preprocessOrder()
	{
		// determine proration
		MM_PaymentUtils::applyProration($this);
	}	
	
	public function getOrderNumber()
	{
		return $this->order_number;
	}
	 
	public function setOrderNumber($order_number)
	{
		$this->order_number = $order_number;
	}
	
	
	public function getFormSubmissionId()
	{
		return $this->formSubmissionId;
	}
	
	
	public function setFormSubmissionId($val)
	{
		$this->formSubmissionId = $val;
	}
	
	
	public function isShippable()
	{
		return $this->isShippable;
	}
	
	
	public function setShippable($isShippable)
	{
		$this->isShippable = $isShippable;
	}
	
	
	public function setShippingSameAsBilling($shippingSameAsBilling)
	{
		$this->shippingSameAsBilling = $shippingSameAsBilling;
	}
	
	
	public function isShippingSameAsBilling()
	{
		return $this->shippingSameAsBilling;
	}
	
	
	public function setOrderStatus($status)
	{
		$this->order_status = $status;
	}
	
	
	public function getOrderStatus()
	{
		return $this->order_status;
	}
	
	
	public function getShipping($doFormat=false)
	{
		if ($doFormat)
		{
			return _mmf(floatval($this->shipping),$this->currency);
		}
		else
		{
			return number_format(floatval($this->shipping),MM_CurrencyUtil::getPrecisionForCurrency($this->currency),'.','');
		}
	}
	
	
	public function setShipping($shipping)
	{
		$this->shipping = floatval(str_replace("\$","",$shipping));
	}
	
	
	public function getShippingOptionKey()
	{
		return $this->shippingOptionKey;
	}
	
	
	public function setShippingOptionKey($shippingOptionKey)
	{
		$this->shippingOptionKey = $shippingOptionKey;
	}
	
	
	public function getShippingOptionDescription()
	{
		return $this->shippingOptionDescription;
	}
	
	
	public function setShippingOptionDescription($shippingOptionDescription)
	{
		$this->shippingOptionDescription = $shippingOptionDescription;
	}
	
	
	/**
	 * By convention, a shipping option key has the format "<TOKEN>-<unique identifier>". This method uses the token to retrieve the selected shipping method and option, 
	 * and sets the shipping cost and description based on that
	 * 
	 * @param string $shippingOptionKey
	 * @return MM_Response indicating success, or containing a descriptive error message on failure
	 */
	public function setShippingMethodFromKey($shippingOptionKey)
	{
		if (empty($shippingOptionKey))
		{
			return new MM_Response("Error setting shipping costs for order: No shipping option selected",MM_Response::$ERROR);
		}
		
		$split = explode("-", $shippingOptionKey);
		$token = $split[0];
		
		//get the shipping method
		$shippingMethod = MM_ShippingMethod::getShippingMethodByToken($token);
		if (is_null($shippingMethod))
		{
			return new MM_Response("Error setting shipping costs for order: Shipping method not found",MM_Response::$ERROR);
		}
		
		//use the method to return the seelected option and its rate
		$optionRetrievalResponse = $shippingMethod->getShippingOptionByKey($this, $shippingOptionKey);
		if ($optionRetrievalResponse->type == MM_Response::$ERROR)
		{
			return $optionRetrievalResponse;
		}
		
		$shippingOption = $optionRetrievalResponse->message;
		$this->setShipping($shippingOption->getRate());
		$this->setShippingOptionDescription("({$shippingMethod->getName()}) {$shippingOption->getName()}");
		$this->setShippingOptionKey($shippingOptionKey);
		
		return new MM_Response();
	}
	
	
	public function getSubtotal($doFormat=false)
	{
		if ($doFormat)
		{
			return _mmf(floatval($this->subtotal),$this->currency);
		}
		else
		{
			return number_format(floatval($this->subtotal),MM_CurrencyUtil::getPrecisionForCurrency($this->currency),'.','');
		}
	}
	
	
	public function getDiscount($doFormat=false)
	{
		if ($doFormat)
		{
			return _mmf(floatval($this->discount),$this->currency);
		}
		else
		{
			return number_format(floatval($this->discount),MM_CurrencyUtil::getPrecisionForCurrency($this->currency),'.','');
		}
	}
	
	
	public function setCurrency($currency)
	{
		$this->currency = $currency;
	}
	
	
	public function getCurrency()
	{
		return $this->currency;
	}
	
	public function getDataAsStdClass()
	{ 
		$orderObj = new stdClass();
		$orderObj->orderNumber = $this->getOrderNumber();
		$orderObj->ipAddress = $this->getIPAddress();
		$orderObj->orderStatus = $this->getOrderStatus();
		$orderObj->affiliateId = $this->getAffiliateId();
		$orderObj->subAffiliateId = $this->getSubAffiliateId();
		$orderObj->isShippable = $this->isShippable();
		$orderObj->billingSameAsShipping = $this->isShippingSameAsBilling();
		
		$orderObj->currency = $this->getCurrency();
		$orderObj->tax = $this->getTax(false);
		$orderObj->shipping = $this->getShipping(false);
		$orderObj->discount = $this->getDiscount(false);
		$orderObj->subTotal = $this->getSubtotal(false);
		$orderObj->total = $this->getTotal(false);
		
		$products = $this->getProducts();
		$orderObj->orderProducts = $this->orderItemsToStdClass($products); 
		
		$prorations = $this->getProrations();
		$orderObj->orderProrations = $this->orderItemsToStdClass($prorations); 
		
		$coupons = $this->getCoupons();
		$orderObj->coupons =  $this->orderItemsToStdClass($coupons); 
		 
		$customerAddress =  $this->billingAddress;
		$orderObj->billingAddress = new stdClass();
		$orderObj->billingAddress->address1 = $customerAddress->getAddressLine1();
		$orderObj->billingAddress->address2 = $customerAddress->getAddressLine2();
		$orderObj->billingAddress->city = $customerAddress->getCity();
		$orderObj->billingAddress->state = $customerAddress->getState();
		$orderObj->billingAddress->zip = $customerAddress->getPostalCode();
		$orderObj->billingAddress->phone = $customerAddress->getPhone();
		
		$shippingAddress =  $this->shippingAddress;
		$orderObj->shippingAddress = new stdClass();
		$orderObj->shippingAddress->address1 = $shippingAddress->getAddressLine1();
		$orderObj->shippingAddress->address2 = $shippingAddress->getAddressLine2();
		$orderObj->shippingAddress->city = $shippingAddress->getCity();
		$orderObj->shippingAddress->state = $shippingAddress->getState();
		$orderObj->shippingAddress->zip = $shippingAddress->getPostalCode();
		$orderObj->shippingAddress->phone = $shippingAddress->getPhone();
		return $orderObj;
	}

	public function getIsTest()
	{
		return $this->isTest;
	}


	public function setIsTest($isTest)
	{
		$this->isTest = $isTest;
		$orderItems = $this->getProducts() + $this->getCoupons() + $this->getProrations();
		foreach ($orderItems as $item)
		{
			$item->setIsTest($isTest);
		}
	}
	
	
	public function isTest()
	{
		return $this->isTest;
	}

	/*
	 * helper method for breaking down order* arrays of orderItems.
	 * @param array $orderItemArr of orderItems
	 * @return stdClass representing the array of MM_OrderItem objects as stdClass
	 */  
	private function orderItemsToStdClass($orderItemArr)
	{
		$orderObj = array(); 
		if(is_array($orderItemArr)){
			foreach($orderItemArr as $id=>$orderItem){
				if($orderItem instanceof MM_OrderItem){
					$orderObj[$id] = new stdClass();
					$orderObj[$id]->id = $orderItem->getId();
					$orderObj[$id]->itemId = $orderItem->getItemId();
					$orderObj[$id]->description = $orderItem->getDescription();
					$orderObj[$id]->amount = $orderItem->getAmount();
					$orderObj[$id]->quantity = $orderItem->getQuantity();
					$orderObj[$id]->total = $orderItem->getTotal();
					$orderObj[$id]->status = $orderItem->getStatus();
					$orderObj[$id]->isGift = $orderItem->isGift();
					$orderObj[$id]->isRecurring = $orderItem->isRecurring();
					$orderObj[$id]->recurringAmount = $orderItem->getRecurringAmount();
					$orderObj[$id]->recurringDiscount = $orderItem->getRecurringDiscount();
					$orderObj[$id]->trialAmount = $orderItem->getTrialAmount();
					$orderObj[$id]->trialDuration = $orderItem->getTrialDuration();
					$orderObj[$id]->trialFrequency = $orderItem->getTrialFrequency();
					$orderObj[$id]->rebillPeriod = $orderItem->getRebillPeriod();
					$orderObj[$id]->rebillFrequency = $orderItem->getRebillFrequency();
					$orderObj[$id]->maxRebills = $orderItem->getMaxRebills();
					$orderObj[$id]->currency = $orderItem->getCurrency();
				}
			}
		}
		return $orderObj;
	}
	
	
	/**
	 * Convenience function that sets the status and updates the order status if the order has already been persisted 
	 *
	 * @param $orderStatus The status to save
	 * 
	 * @return The result of the wpdb->update() call
	 */
	public function saveOrderStatus($orderStatus)
	{
		global $wpdb;
		
		if (is_numeric($orderStatus))
		{
			$this->setOrderStatus($orderStatus);
			$orderAlreadyPersisted = (intval($this->id) >0)?true:false;
			if ($orderAlreadyPersisted)
			{
				$result = $wpdb->update(MM_TABLE_ORDERS, array("status"=>$orderStatus), array("id" => $this->id));
			}
		}
		return $result;
	}
	
}
